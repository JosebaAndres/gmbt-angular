@use '@angular/material' as mat;
@use '../settings/colors.scss' as colors;
@use '@angular/material/theming' as mat-theming;

// Define the palettes for your theme using the Material Design palettes available in palette.scss
$app-mat-primary-palette: (
  100: colors.$primary-100-color,
  200: colors.$primary-200-color,
  500: colors.$primary-500-color,
  700: colors.$primary-700-color,
  // For slide toggle,
  contrast:
    (
      100: mat-theming.$dark-primary-text,
      500: colors.$primary-500-color-contrast,
      700: mat-theming.$light-primary-text,
    ),
);
$app-mat-primary: mat.define-palette($app-mat-primary-palette);

$app-mat-accent-palette: (
  100: colors.$accent-100-color,
  200: colors.$accent-200-color,
  500: colors.$accent-500-color,
  700: colors.$accent-700-color,
  contrast: (
    100: mat-theming.$dark-primary-text,
    500: mat-theming.$light-primary-text,
    700: mat-theming.$light-primary-text,
  ),
);
$app-mat-accent: mat.define-palette($app-mat-accent-palette);

$app-mat-warn-palette: (
  100: colors.$warn-100-color,
  200: colors.$warn-200-color,
  500: colors.$warn-500-color,
  700: colors.$warn-700-color,
  contrast: (
    100: mat-theming.$dark-primary-text,
    500: mat-theming.$light-primary-text,
    700: mat-theming.$light-primary-text,
  ),
);
$app-mat-warn: mat.define-palette($app-mat-warn-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-mat-theme: mat.define-dark-theme(
  (
    color: (
      primary: $app-mat-primary,
      accent: $app-mat-accent,
      warn: $app-mat-warn,
    ),
  )
);
